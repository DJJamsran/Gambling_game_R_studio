#You are to develop a simple gambling game and the code you write simply 
#performs a single execution of the game, hence a single turn. 
#Write code to do the following

#(i)
SingleRoll <- function() {
  # Randomly choose a bet
  bets <- seq(from = 10, to = 100, by = 5)
  bet <- sample(bets, 1)
  
  #First digit refer to a face of the first dice, the second digit refers to
  # a face of the second dice
  z <- c(11:16, 21:26,31:36,41:46, 51:56, 61:66)
  # Simulate the roll of a pair of fair dice
  roll <- sample(z,1)
  
  # Determine the outcome of the roll
  if (roll %in% c(22,44) ) {
    winmoney <- bet * 2
    cat("You rolled", roll, ". Bet is", bet, ". You won $", winmoney, "!", "\n")
  } else if (roll == 66) {
    winmoney <- bet * 5
    cat("You rolled", roll, ". Bet is", bet, ". You won $", winmoney, "!", "\n")
    cat("Jackpot win!!!")
  } else if (roll %in% c(11, 33, 55)) {
    winmoney <- 0
    cat("You rolled", roll, ". Bet is", bet, ". You lost your bet $", bet, "!", "\n")
  } else {
    winmoney <- bet/2
    cat("You rolled", roll,". Bet is", bet,  ". You lost $", winmoney, "!", "\n")
  }
  return(winmoney)
}
SingleRoll()

#(ii) - Bet generator
#Insert within another function, the code you wrote in (i) 
#Determining bet by using functional program to create "BetGenerator"
BetGenerator <- function(x) {
  #By using seq function to generate bets
  Bet <- seq(from = 10, to = 100, by = 5) 
  #Generating single bet by using sample function
  BetAmount <- sample(Bet, 1) 
  return(BetAmount)
}
BetGenerator(x)

#(iii)
PlayGame <- function(turns = 10){
  #Creating initial bets in vectors 
  total_winnings <- 0
  total_bet <- 0
  #In the loop, we are using BetGenerator function to generate a bet, and using
  #SingleRoll function to check the outcome, and storing the variable in the 
  #initial vectors respectively
  for(i in 1:turns){
    bet <- BetGenerator()
    total_bet <- total_bet+bet
    winnings <- SingleRoll(bet)
    total_winnings <- total_winnings + winnings
  }
  #Computing profit
  profit <- total_winnings - total_bet 
  #Displaying the overall outcome by using cat function
  cat("Overall: ", ifelse(profit > 0, 
      paste0("won $", profit), paste0("lost $", -profit)), "\n")
  
  return(profit)
}
PlayGame(10)

#(iv)
#What is the overall position for the player after one hundred turns of the game,
#where every turn consists of a $50 bet? The position should consist of
#1) Total outlay
#2)Total winnings
#3)Overall profit

PlayGame <- function(turns = 100){
  total_winnings <- 0
  total_bet <- 0
  for(i in 1:turns){
    bet <- BetGenerator()
    total_bet <- total_bet+bet
    winnings <- SingleRoll(bet)
    total_winnings <- total_winnings + winnings
  }
  #Computing overall result 
  Overallprofit <- total_winnings - total_bet 
  TotalOutlay <- total_bet
  TotalWinnings <- total_winnings
  #Displaying the overall result in the format 
  return(cat("         ###############################
         ### Total outlay: ", "$", format(TotalOutlay, width = 4), "##
         ### Total Winnings: ", "$", format(TotalWinnings, width = 4), "##
         ### Total profit: ", "$", format(Overallprofit, width = 4), "##
         ###############################"))
}
PlayGame(100)
